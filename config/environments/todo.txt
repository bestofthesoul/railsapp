bundle install
gem file (devise gem)
rails g devise:install
config/environ/dev (  config.action_mailer.default_url_options = { host: 'localhost', port: 3000 })

config/environ/production ( config.action_mailer.default_url_options = { host: 'your.domain.com'})

rails g devise user (this user is model)
rails g devise:views users
 	invoke  Devise::Generators::SharedViewsGenerator
      create    app/views/users/shared
      create    app/views/users/shared/_links.html.erb
      invoke  form_for
      create    app/views/users/confirmations
      create    app/views/users/confirmations/new.html.erb
      create    app/views/users/passwords
      create    app/views/users/passwords/edit.html.erb
      create    app/views/users/passwords/new.html.erb
      create    app/views/users/registrations
      create    app/views/users/registrations/edit.html.erb
      create    app/views/users/registrations/new.html.erb
      create    app/views/users/sessions
      create    app/views/users/sessions/new.html.erb
      create    app/views/users/unlocks
      create    app/views/users/unlocks/new.html.erb
      invoke  erb
      create    app/views/users/mailer
      create    app/views/users/mailer/confirmation_instructions.html.erb
      create    app/views/users/mailer/reset_password_instructions.html.erb
      create    app/views/users/mailer/unlock_instructions.html.e

rails g devise:controllers users
      create  app/controllers/users/confirmations_controller.rb
      create  app/controllers/users/passwords_controller.rb
      create  app/controllers/users/registrations_controller.rb
      create  app/controllers/users/sessions_controller.rb
      create  app/controllers/users/unlocks_controller.rb
      create  app/controllers/users/omniauth_callbacks_controller.rb



rails g controller static_pages
      create  app/controllers/static_pages_controller.rb
      invoke  erb
      create    app/views/static_pages
      invoke  test_unit
      create    test/controllers/static_pages_controller_test.rb
      invoke  helper
      create    app/helpers/static_pages_helper.rb
      invoke    test_unit
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/static_pages.coffee
      invoke    scss
      create      app/assets/stylesheets/static_pages.scss


delete .scss n .coffee file for static pages

static page controllers --> create welcome method
create welcome.html.erb under views/static_pages
config/routes (root ro static_pages#welcome)


----------------
#CONTENT_FOR 
http://api.rubyonrails.org/classes/ActionView/Helpers/CaptureHelper.html

<% content_for :title, "testing" %>
<title><%= yield :title %></title>

#both pair together (use for cross templating)

------
#bootstrap
http://www.bootstrapcdn.com/ (cdn -- contentn distributor network)
copy these html links;
1) complete css/html
2) jquery (https://developers.google.com/speed/libraries/)
3) complete js/html

%= link_to "Sign Up", new_user_registration_path, class: "btn btn-primary" %>
<%= link_to "Log In", new_user_session_path, class: "btn btn-success" %>
-------
# validation
password controller
model controller
database validation


#view/user/registration/new.html.erb
<% content_for  :titile, "Sign Up" %>

  <div class="field">
    <%= f.label :email %><br />
    <%= f.email_field :email, class: "form-control", required: true, autofocus: "true", autofocus: true %>
  </div>

#config/routes.rb
Rails.application.routes.draw do
  devise_for :users, controllers:  {registrations: "users/registrations", sessions: "users/sessions"}
  root 'static_pages#welcome'
end

#app/controller/users/sessions_controllers.rb
  def after_sign_in_path_for(resource_or_scope)
    private_page_path
  end
 
#app/controller/users/registrations_controllers.rb
  def after_sign_up_path_for(resource)
    private_page_path
  end

  <h1>private page</h1>, <invalid page>
<% if user_signed_in? %>
  <li>
  <%= link_to('Logout', destroy_user_session_path, :method => :delete) %>        
  </li>
<% end %>

-----user authentication
#class StaticPagesController < ApplicationController
  before_action :authenticate_user!, only: [:private]
  # mei you sign in cannot view private page

-----



